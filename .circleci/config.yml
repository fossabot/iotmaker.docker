# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get github.com/moby/moby; exit 0

      - run: go get godoc.org/golang.org/x/sys/windows; exit 0
      - run: go get golang.org/x/crypto; exit 0
      - run: go get golang.org/x/net; exit 0
      - run: go get golang.org/x/text; exit 0
      - run: go get github.com/opencontainers/go-digest; exit 0
      - run: go get github.com/opencontainers/image-spec/specs-go/v1; exit 0
      - run: go get github.com/containerd/containerd; exit 0
      - run: go get google.golang.org/genproto/googleapis/rpc/status; exit 0
      - run: go get github.com/golang/protobuf/proto; exit 0
      - run: go get google.golang.org/grpc/codes; exit 0
      - run: go get github.com/sirupsen/logrus; exit 0
      - run: go get github.com/pkg/errors; exit 0
      - run: go get github.com/gogo/protobuf/proto; exit 0
      - run: go get github.com/docker/go-units; exit 0
      - run: go get github.com/docker/distribution/reference; exit 0
      - run: go get github.com/Microsoft/go-winio; exit 0
      - run: go get github.com/helmutkemper/iotmaker.docker; exit 0
      - run: find . -name vendor -type d -exec rm -rf {} +
      - run: go test -v ./...